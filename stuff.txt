# To start both frontend and backend:
cd frontend; npm start

& "C:/Users/MuneebAnjum/Desktop/Timetable Wizard/.venv/Scripts/python.exe" backend/app.py

# ======= SMART SCHEDULING UPDATE =======
# The scraper now intelligently handles next-day timetables!
# 
# NEW BEHAVIOR:
# - After 5 PM (17:00): Looks for TOMORROW's timetable 
# - Before 5 PM: Looks for TODAY's timetable
# 
# This matches your university's schedule:
# "Next day's timetable is available between 5-11 PM the day before"
# 
# You can customize the 5 PM cutoff by setting NEXT_DAY_AVAILABLE_HOUR in .env
# Default scheduler now runs at 8 PM (20:00) instead of 11 PM for better timing

# Run once with beautiful table display (recommended)
python -m src.scraper.main --once

# 1. Run once with table display (default behavior)
python -m src.scraper.main --once

# 2. Run once without showing the table
python -m src.scraper.main --once --no-table

# 3. Display existing JSON schedule in beautiful table format
python -m src.scraper.main --show-json data/cache/schedule_2025-10-06.json

# 4. Check system health and diagnostics
python -m src.scraper.main --health-check

# 5. Show current configuration settings
python -m src.scraper.main --config-info

# 6. Run with debug mode for troubleshooting
python -m src.scraper.main --once --debug

# 7. Clear cache before running
python -m src.scraper.main --once --cache-clear

# 8. Start the nightly scheduler (runs continuously)
python -m src.scraper.main --run-scheduler




so help me for Deploying backend and frontend BOTH on railway...
Give me A-Z everything for env variables that I need to enter there to how to create a project and what folder to import for backend and update the files accordingly to accomodate everything as well
